{
  "TargetTestFile": "sqliteDB_Test",
  "Connection": {
    "dataBase": ":memory:"
  },
  "test_write": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "readStatement": "SELECT name FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type LIKE 'table' ORDER BY name",
      "expectedReadResult": ["Items"]
    },
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); INSERT INTO Items (Id) VALUES(1); INSERT INTO Items (Id) VALUES(2); INSERT INTO Items (Id) VALUES(3)",
      "readStatement": "SELECT Id FROM Items",
      "expectedReadResult": [1, 2, 3]
    }
  ],
  "test_writeAsync": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "readStatement": "SELECT name FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type LIKE 'table' ORDER BY name",
      "expectedReadResult": ["Items"]
    },
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); INSERT INTO Items (Id) VALUES(1); INSERT INTO Items (Id) VALUES(2); INSERT INTO Items (Id) VALUES(3)",
      "readStatement": "SELECT Id FROM Items",
      "expectedReadResult": [1, 2, 3]
    }
  ],
  "test_read": [
    {
      "readStatement": "SELECT name FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type LIKE 'table' ORDER BY name",
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "expectedReadResult": ["Items"]
    }
  ],
  "test_readAsync": [
    {
      "readStatement": "SELECT name FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type LIKE 'table' ORDER BY name",
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "expectedReadResult": ["Items"]
    }
  ],
  "test_listTables": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL)",
      "expectedReadResult": ["Items", "Items2"]
    }
  ],
  "test_isTableExist": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL)",
      "tables": ["Items0", "Items", "Items1", "Items2", "Items3"],
      "expectedResults": [false, true, false, true, false]
    }
  ],
  "test_listRows": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL)",
      "tables": ["Items", "Items2"],
      "expectedResults": [["Id"], ["Id", "Id2"]]
    }
  ],
  "test_isRowExist": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL)",
      "inputData": [{"Items": ["Id", "Id2"]}, {"Items2": ["Id0", "Id", "Id2", "Id1"]}, {"Items3": ["Id", "Id2", "Id0", "Id", "Id2", "Id1"]}],
      "expectedResults": [[true, false], [false, true, true, false], [false, false, false, false, false, false]]
    }
  ],
  "test_dropTable": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "table": "Items"
    },
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "table": "Items2"
    }
  ],
  "test_deleteFromTable": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); INSERT INTO Items (Id) VALUES(1); INSERT INTO Items (Id) VALUES(2); INSERT INTO Items (Id) VALUES(3); INSERT INTO Items (Id) VALUES(4)",
      "table": "Items",
      "rows": ["Id"],
      "items": [[1], [2], [3], [4]],
      "expectedResults": [1, 2, 3, 4]
    },
    {
      "writeStatement": "CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL); INSERT INTO Items2 (Id, Id2) VALUES(1, 1); INSERT INTO Items2 (Id, Id2) VALUES(2, 2); INSERT INTO Items2 (Id, Id2) VALUES(3, 3); INSERT INTO Items2 (Id, Id2) VALUES(4, 4)",
      "table": "Items2",
      "rows": ["Id", "Id2"],
      "items": [[1, 1], [2, 2], [3, 3], [4, 4]],
      "expectedResults": [[1, 1], [2, 2], [3, 3], [4, 4]]
    }
  ],
  "test_updateAtTable": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id1 INTEGER NOT NULL); INSERT INTO Items (Id, Id1) VALUES(1, 1); INSERT INTO Items (Id, Id1) VALUES(2, 2); INSERT INTO Items (Id, Id1) VALUES(3, 3); INSERT INTO Items (Id, Id1) VALUES(4, 4)",
      "table": "Items",
      "rows": ["Id1"],
      "currentItems": [[1], [2], [3], [4]],
      "items": [[5], [6], [7], [8]],
      "expectedResults": [5, 6, 7, 8]
    },
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id1 INTEGER NOT NULL, Id2 INTEGER NOT NULL); INSERT INTO Items (Id, Id1, Id2) VALUES(1, 1, 2); INSERT INTO Items (Id, Id1, Id2) VALUES(2, 3, 4); INSERT INTO Items (Id, Id1, Id2) VALUES(3, 5, 6); INSERT INTO Items (Id, Id1, Id2) VALUES(4, 7, 8)",
      "table": "Items",
      "rows": ["Id1", "Id2"],
      "currentItems": [[1, 2], [3, 4], [5, 6], [7, 8]],
      "items": [[9, 10], [11, 12], [13, 14], [15, 16]],
      "expectedResults": [[9, 10], [11, 12], [13, 14], [15, 16]]
    }
  ],
  "test_getFrom": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL); INSERT INTO Items (Id) VALUES(1); INSERT INTO Items (Id) VALUES(2); INSERT INTO Items (Id) VALUES(3); INSERT INTO Items (Id) VALUES(4)",
      "table": "Items",
      "rows": ["Id"],
      "expectedResult": [1, 2, 3, 4]
    },
    {
      "writeStatement": "CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL); INSERT INTO Items2 (Id, Id2) VALUES(1, 2); INSERT INTO Items2 (Id, Id2) VALUES(3, 4)",
      "table": "Items2",
      "rows": ["Id", "Id2"],
      "expectedResult": [[1, 2], [3, 4]]
    }
  ],
  "test_insertInto": [
    {
      "writeStatement": "CREATE TABLE Items (Id INTEGER PRIMARY KEY UNIQUE NOT NULL)",
      "table": "Items",
      "rows": ["Id"],
      "items": [1, 2, 3, 4]
    },
    {
      "writeStatement": "CREATE TABLE Items2 (Id INTEGER PRIMARY KEY UNIQUE NOT NULL, Id2 INTEGER UNIQUE NOT NULL)",
      "table": "Items2",
      "rows": ["Id", "Id2"],
      "items": [[1, 2], [3, 4]]
    }
  ]
}
